theme_custom <- function (base_size = 10, base_family = "serif") {#
  theme_grey(base_size = base_size, base_family = base_family) %+replace%#
    theme(#
      line =               element_line(colour = "black", size = 0.5, linetype = 1, lineend = "butt"),#
      rect =               element_rect(fill = "white", colour = "black", size = 0.5, linetype = 1),#
      text =               element_text(family = base_family, face = "plain", colour = "black", size = base_size, hjust = 0.5, vjust = 0.5, angle = 0, lineheight = 0.5, margin=margin(0.1, 0.1, 0.1, 0.1, unit="cm"), debug=FALSE),#
      axis.text =          element_text(size = rel(0.8), colour = "grey50"),#
      strip.text =         element_text(size = rel(0.8)),#
#
      axis.line =          element_blank(),#
      axis.text.x =        element_text(family = base_family, size = base_size * 0.7, lineheight = 0.8, vjust = 1.2),#
      axis.text.y =        element_text(family = base_family, size = base_size * 0.7, lineheight = 0.8, hjust = 1.2),#
      axis.ticks =         element_line(colour = "black", size=0.2),#
      axis.title.x =       element_text(family = base_family, size = base_size, vjust = 0.5),#
      axis.title.y =       element_text(family = base_family, size = base_size, angle = 90, vjust = 0.5),#
      axis.ticks.length =  unit(0.15, "cm"),#
      ## axis.ticks.margin =  unit(0.1, "cm"),#
      legend.background =  element_rect(fill=NA, colour=NA, size=0.05),#
      legend.margin =      margin(0.05, 0.05, 0.05, 0.05, "cm"),#
      legend.key =         element_rect(fill = "grey95", colour = "white"),#
      legend.key.size =    unit(0.9, "cm"),#
      legend.key.height =  unit(0.5, "lines"),#
      legend.key.width =   NULL,#
      legend.text =        element_text(family = base_family, size = base_size * 0.6),#
      legend.text.align =  NULL,#
      legend.title =       element_text(family = base_family, size = base_size * 0.6, face = "bold", hjust = 0),#
      legend.title.align = NULL,#
      legend.position =    "right",#
      legend.direction =   NULL,#
      legend.justification = "center",#
      legend.box =         NULL,#
      panel.background =   element_rect(fill = "white", colour = NA),#
      panel.border =       element_rect(fill = NA, colour = "grey50"),#
      panel.grid.major =   element_line(colour = "grey60", size = 0.1),#
      panel.grid.minor =   element_line(colour = "grey70", size = 0.1, linetype="dotted"),#
      ## panel.margin =       unit(c(0.1, 0.1, 0.1, 0.1), "lines"),#
      strip.background =   element_rect(fill = NA, colour = NA),#
      strip.text.x =       element_text(family = base_family, size = base_size * 0.8),#
      strip.text.y =       element_text(family = base_family, size = base_size * 0.8, angle = -90),#
      plot.background =    element_rect(colour = NA, fill = "white"),#
      plot.title =         element_text(family = base_family, size = base_size),#
      plot.margin =        unit(c(0, 0, 0, 0), "lines")#
    )#
}
#!/usr/bin/env Rscript#
#
suppressPackageStartupMessages (library(ggplot2))#
suppressPackageStartupMessages (library(dplyr))#
suppressPackageStartupMessages (library(tidyr))#
#
source ("graphs/graph-style.R")#
#
levels=seq(20,200,20)#
data=data.frame(TotalNodes = factor(levels=levels), Node=integer(), Time=double(), Name=factor(), Action=factor(), X=double(), Y=double())#
for (number in levels) {#
    t = read.csv(file=paste(sep='', 'results/', number, '-tmin=0.020000-tmax=0.100000-cancelasunhelpful.csv'), header=TRUE, sep=",")#
    ## t = t[-c(5,6)]#
    ## t = t[sample(1:nrow(t), 70, replace=FALSE),]#
    ## ## t = t[seq(1,nrow(t),2)]#
    ## names(t) = c("Time", "Delay")#
    ## t$Distance = factor(distance, levels=levels)#
    t$TotalNodes = factor(number, levels=levels)#
    data = rbind(t, data)#
}#
#
s = subset(data, TotalNodes==200 & Action!="Suppressed" & Action!="Duplicate")#
#
g <- ggplot(s, aes(x=X, y=Y)) +#
    theme_custom() +#
    geom_point(aes(colour=Action, size=Action)) +#
    scale_size_manual(values=c(4,1)) +#
    facet_grid(Name ~ .)#
#
adjusted = subset(data, Action != "Duplicate" & Action != "Suppressed")#
## levels(adjusted$Action) = c("Broadcast", "Received", "Received", "Suppressed")#
#
## p.Wages.all.A_MEAN <- Wages.all %>%#
##                   group_by(`Career Cluster`, Year)%>%#
##                   summarize(ANNUAL.MEAN.WAGE = mean(A_MEAN))#
counts = adjusted %>% group_by(Action, Name, TotalNodes) %>% tally()#
#
countsWithErrors = counts %>% group_by(Action, TotalNodes) %>% summarize(Mean=mean(n), Min=min(n), Max=max(n))#
#
    ## summarize(Time=count(Time))#
#
g2 <- ggplot(countsWithErrors, aes(x=TotalNodes)) +#
    geom_bar(stat="identity", aes(y=Mean, colour=Action, fill=Action), position="dodge") +#
    geom_errorbar(aes(ymin=Min, ymax=Max, group=Action), size=I(0.3), width=I(0.4), position=position_dodge(width=1)) +#
    theme_custom()#
#
## g <- ggplot(data, aes(x=Time)) +#
##     xlab("Time, s") +#
##     ylab("Delay, milliseconds") +#
##     geom_point(aes(y=Delay, colour=Distance)) +#
##     theme_custom()#
ggsave("graphs/pdfs/map.pdf", plot=g, width=12, height=8, device=cairo_pdf)#
ggsave("graphs/pdfs/suppressions.pdf", plot=g2, width=6, height=4, device=cairo_pdf)
suppressPackageStartupMessages (library(ggplot2))
pwd
setwd("~/git_repo/ndnSIM/NdnSimv2v/results/")
library(ggplot2)
hop.data <- read.csv(file="multihop.csv", sep=",")
g1 <- ggplot()
g2 <- ggplot() + geom_line(aes(y = time, x = distance), data = hop.data)
g2
g2 <- ggplot() + geom_line(aes(y = time, x = distance), data = hop.data) + scale_x_continuous(breaks=seq(50,950,50))
g2
g2 <- ggplot() + geom_line(aes(y = time, x = distance), data = hop.data) + scale_x_continuous(breaks=seq(50,950,50)) + theme(text=element_text(family="Tahoma"))
g2
g2 + labs(title = "time to retrieve data in various distances", x = "distance (m)", y = "time (s)")
g2 <- ggplot() + geom_line(aes(y = time, x = distance), data = hop.data) + scale_x_continuous(breaks=seq(50,950,50)) + scale_y_continuous(breaks=seq(0.25,1.5,0.25))+ theme(text=element_text(family="Tahoma"))
g2
g2 + labs(title = "time to retrieve data in various distances", x = "distance (m)", y = "time (s)")
ggsave("graphs/pdfs/data-time-vs-distance.pdf", plot=g2, width=12, height=6, device=cairo_pdf)
ggsave("data-time-vs-distance.pdf", plot=g2, width=12, height=6, device=cairo_pdf)
suppressPackageStartupMessages (library(ggplot2))#
suppressPackageStartupMessages (library(dplyr))#
suppressPackageStartupMessages (library(tidyr))#
#
source ("../graphs/graph-style.R")#
#
tmin=c("0.050000")#
## tmin=c("0.020000")#
data=data.frame(Node=integer(), Time=double(), Name=factor(), Action=factor(), X=double(), Y=double(), Tmin=factor(levels=tmin))#
for (time in tmin) {#
    t = read.csv(file=paste(sep='', 'results/srcinmiddle-100-tmin=', time ,'-tmax=0.300000.csv'), header=TRUE, sep=",")#
    ## t = t[-c(5,6)]#
    t$Tmin = factor(time, levels=tmin)#
    data = rbind(t, data)#
}#
#
s = subset(data, Name < 5 & Action!="Suppressed" & Action!="Duplicate")#
#
g <- ggplot(s, aes(x=X, y=Y)) +#
    theme_custom() +#
    geom_point(aes(colour=Action, size=Action)) +#
    scale_size_manual(values=c(4,1)) +#
    facet_grid(Name ~ .)
suppressPackageStartupMessages (library(ggplot2))#
suppressPackageStartupMessages (library(dplyr))#
suppressPackageStartupMessages (library(tidyr))#
#
source ("../graphs/graph-style.R")#
#
tmin=c("0.050000")#
## tmin=c("0.020000")#
data=data.frame(Node=integer(), Time=double(), Name=factor(), Action=factor(), X=double(), Y=double(), Tmin=factor(levels=tmin))#
for (time in tmin) {#
    t = read.csv(file=paste(sep='', '30-srcinmiddle-tmin=', time ,'-tmax=0.300000.csv'), header=TRUE, sep=",")#
    ## t = t[-c(5,6)]#
    t$Tmin = factor(time, levels=tmin)#
    data = rbind(t, data)#
}#
#
s = subset(data, Name < 5 & Action!="Suppressed" & Action!="Duplicate")#
#
g <- ggplot(s, aes(x=X, y=Y)) +#
    theme_custom() +#
    geom_point(aes(colour=Action, size=Action)) +#
    scale_size_manual(values=c(4,1)) +#
    facet_grid(Name ~ .)
suppressPackageStartupMessages (library(ggplot2))#
suppressPackageStartupMessages (library(dplyr))#
suppressPackageStartupMessages (library(tidyr))#
#
source ("../graphs/graph-style.R")
tmin=c("0.050000")#
## tmin=c("0.020000")#
data=data.frame(Node=integer(), Time=double(), Name=factor(), Action=factor(), X=double(), Y=double(), Tmin=factor(levels=tmin))#
for (time in tmin) {#
    t = read.csv(file=paste(sep='', 'results/30-srcinmiddle-tmin=', time ,'-tmax=0.200000.csv'), header=TRUE, sep=",")#
    ## t = t[-c(5,6)]#
    t$Tmin = factor(time, levels=tmin)#
    data = rbind(t, data)#
}
tmin=c("0.050000")#
## tmin=c("0.020000")#
data=data.frame(Node=integer(), Time=double(), Name=factor(), Action=factor(), X=double(), Y=double(), Tmin=factor(levels=tmin))#
for (time in tmin) {#
    t = read.csv(file=paste(sep='', '30-tmin=',time,'-tmax=0.200000-sourceinthemiddle'), header=TRUE, sep=",")#
    ## t = t[-c(5,6)]#
    t$Tmin = factor(time, levels=tmin)#
    data = rbind(t, data)#
}
tmin=c("0.050000")#
## tmin=c("0.020000")#
data=data.frame(Node=integer(), Time=double(), Name=factor(), Action=factor(), X=double(), Y=double(), Tmin=factor(levels=tmin))#
for (time in tmin) {#
    t = read.csv(file=paste(sep='', '30-tmin=',time,'-tmax=0.200000-sourceinthemiddle.csv'), header=TRUE, sep=",")#
    ## t = t[-c(5,6)]#
    t$Tmin = factor(time, levels=tmin)#
    data = rbind(t, data)#
}
s = subset(data, Name < 5 & Action!="Suppressed" & Action!="Duplicate")#
#
g3 <- ggplot(s, aes(x=X, y=Y)) +#
    theme_custom() +#
    geom_point(aes(colour=Action, size=Action)) +#
    scale_size_manual(values=c(4,1)) +#
    facet_grid(Name ~ .)
g3
s = subset(data, Name < 2 & Action!="Suppressed" & Action!="Duplicate")#
#
g3 <- ggplot(s, aes(x=X, y=Y)) +#
    theme_custom() +#
    geom_point(aes(colour=Action, size=Action)) +#
    scale_size_manual(values=c(4,1)) +#
    facet_grid(Name ~ .)
g3
s = subset(data, Name < 1 & Action!="Suppressed" & Action!="Duplicate")#
#
g3 <- ggplot(s, aes(x=X, y=Y)) +#
    theme_custom() +#
    geom_point(aes(colour=Action, size=Action)) +#
    scale_size_manual(values=c(4,1)) +#
    facet_grid(Name ~ .)
g3
ggsave("srcinmiddle-map.pdf", plot=g, width=8, height=2, device=cairo_pdf)
ggsave("srcinmiddle-map.pdf", plot=g3, width=8, height=2, device=cairo_pdf)
